{
  "id": null,
  "numberOfColumns": 8,
  "offsetColumns": 2,
  "renderOrder": 1,
  "page": null,
  "markdownContent": "Look at your watch! Or count to five! For in 5 seconds, a dialog box will pop up on this page...<br><br>Now, if all has gone to plan, you won't be reading *this* paragraph until you have closed the dialog box which popped up after 5 seconds. By closing that box, you return to the page you had been on when it popped up (that is, here, T1.6). The player can therefore continue with whatever they were doing before the dialog, and then transition off this page with as many choices as you, the game-creator, want to give them. In other words, because the *pageTransition* variable in the `dialogResponse.json` file is set to null, your closing the dialog box has no impact on how you transition off this page. (In the previous example, by contrast, the choices offered to you in the dialog box were directly linked to the page transitions.)<br><br>You may be wondering why there are two different options for dialogs. The answer is because the game-creator might want to simulate different types of interruptions to the player's progress. If the idea is to interrupt the player and *force* them to choose in that moment, then the page T1.5D-type dialog is better. But if the idea is to interrupt the player and offer them a hint---perhaps a character who says, “hey, don't forget to do a task!”---then the timed dialog is more effective. But in that case, you want to make sure that the dialog box pops up before there is any possibility of the player transitioning off the page: the timing is a bit tricky, and needs some testing among your future potential players.<br><br>This concludes Chapter 1 of the Tutorial, where we focused on page structure and design. The second chapter will continue what we have now started, by looking at page transitions, and also offer more general advice on creating your own game."
}
