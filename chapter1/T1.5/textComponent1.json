{
  "id": null,
  "numberOfColumns": 8,
  "offsetColumns": 2,
  "renderOrder": 1,
  "showInNotebook": false,
  "showInNotebookAt": null,
  "page": null,
  "markdownContent": "There are essentially two main ways to use the dialog functionality of *Marugoto*, the main difference being the **moment** the dialog appears. The first way lets the players trigger the dialog themselves, in the second one the dialog will appear after a certain time has passed.<br><br>To have the players trigger the dialog themselves -- this has the advantage of being independent from the differing playstyle tempi -- you essentially have to pull a little trick on them. Dialog in *Marugoto* functions on a layer on top of a normal page. Similar to a **mail** you can define the time upon loading the page when the dialog appears. Now to have the dialog pop-up be triggered by a player action, you create two identically looking pages the only difference being that once the player transitions from the first to the second the dialog will appear as soon as the page loads (so *time* being 0). This will create the illusion that the player has directly opened the dialog option, when in fact the dialog appeared because they transitioned to another page where the dialog pops-up after 0 seconds.<br><br>Have a look a the repository again. You'll find T1.5, which is the page we're currently on, and a folder called T1.5D, the *D* being the indicator of it being a dialog page. Once you click on the button below this text, you'll transition to T1.5D. On T1.5D a dialog will pop-up as soon as the page is loaded. The contents of that dialog are defined by a `dialog.json`, a `dialogSpeech.json`, a `character.json`, and as many `dialogResponse.json` files as you want. `dialog.json` functions as the backbone of the dialog pop-up and defines -- similar to the `mail.json` -- who is talking, when it'll appear and what the contents are. *from* is filled with the path to the `character.json`, *openOnReceive* and *receiveAfter* you know from the mail, and *speech* is filled with the path to `dialogSpeech.json`. `character.json` works the exact same way it does with mails. What a person is saying in the dialog is defined by the contents of `dialogSpeech.json`. Similar to the textComponent you simply write in *markdownContent*. Now in this case as responses you have to possibility to go back to T1.5, which is this page, or proceed to T1.6, where the timed dialog is explained. These two options each need a `dialogResponse.json` and a `pageTransition.json`. The first file defines the contents and which `pageTransition.json` will be used, and the `pageTransition.json` defines to which page the player will transition to. *Marugoto* also has the functionality that there's one automatically created **dialogResponses** which leads back to the page you're on, so essentially closing the dialog. Once you proceed to the next page you'll see that instead of just two responses, like the files in the repository would indicate, there are three. Now click the transition button to T1.5D below to see all of this in action. Fear not, there will be a go back button."
}
